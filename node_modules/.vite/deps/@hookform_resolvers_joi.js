import {
  appendErrors,
  get,
  set
} from "./chunk-V4HPUKR7.js";
import "./chunk-WWQM6JW2.js";
import "./chunk-HL2QZUHZ.js";

// node_modules/@hookform/resolvers/dist/resolvers.mjs
var t = function(e, t2, i2) {
  if (e && "reportValidity" in e) {
    var n3 = get(i2, t2);
    e.setCustomValidity(n3 && n3.message || ""), e.reportValidity();
  }
};
var i = function(r, e) {
  var i2 = function(i3) {
    var n4 = e.fields[i3];
    n4 && n4.ref && "reportValidity" in n4.ref ? t(n4.ref, i3, r) : n4.refs && n4.refs.forEach(function(e2) {
      return t(e2, i3, r);
    });
  };
  for (var n3 in e.fields)
    i2(n3);
};
var n = function(t2, n3) {
  n3.shouldUseNativeValidation && i(t2, n3);
  var f = {};
  for (var a in t2) {
    var s = get(n3.fields, a), u = Object.assign(t2[a] || {}, { ref: s && s.ref });
    if (o(n3.names || Object.keys(t2), a)) {
      var c = Object.assign({}, get(f, a));
      set(c, "root", u), set(f, a, c);
    } else
      set(f, a, u);
  }
  return f;
};
var o = function(r, e) {
  return r.some(function(r2) {
    return r2.startsWith(e + ".");
  });
};

// node_modules/@hookform/resolvers/joi/dist/joi.mjs
var n2 = function(n3, o2, a) {
  return void 0 === o2 && (o2 = { abortEarly: false }), void 0 === a && (a = {}), function(i2, s, u) {
    try {
      var c = function() {
        return l.error ? { values: {}, errors: n((n4 = l.error, o3 = !u.shouldUseNativeValidation && "all" === u.criteriaMode, n4.details.length ? n4.details.reduce(function(r, t2) {
          var n5 = t2.path.join(".");
          if (r[n5] || (r[n5] = { message: t2.message, type: t2.type }), o3) {
            var a2 = r[n5].types, i3 = a2 && a2[t2.type];
            r[n5] = appendErrors(n5, o3, r, t2.type, i3 ? [].concat(i3, t2.message) : t2.message);
          }
          return r;
        }, {}) : {}), u) } : (u.shouldUseNativeValidation && i({}, u), { errors: {}, values: l.value });
        var n4, o3;
      }, v = Object.assign({}, o2, { context: s }), l = {}, f = function() {
        if ("sync" === a.mode)
          l = n3.validate(i2, v);
        else {
          var e = function(e2, r) {
            try {
              var t2 = e2();
            } catch (e3) {
              return r(e3);
            }
            return t2 && t2.then ? t2.then(void 0, r) : t2;
          }(function() {
            return Promise.resolve(n3.validateAsync(i2, v)).then(function(e2) {
              l.value = e2;
            });
          }, function(e2) {
            l.error = e2;
          });
          if (e && e.then)
            return e.then(function() {
            });
        }
      }();
      return Promise.resolve(f && f.then ? f.then(c) : c());
    } catch (e) {
      return Promise.reject(e);
    }
  };
};
export {
  n2 as joiResolver
};
//# sourceMappingURL=@hookform_resolvers_joi.js.map
